"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const telegraf_1 = require("telegraf");
const moment_1 = __importDefault(require("moment"));
require("moment-timezone");
moment_1.default.locale("uk");
const dotenv_1 = __importDefault(require("dotenv"));
dotenv_1.default.config({ path: "./.env" });
const user_schema_1 = require("../db/user.schema");
const scenes_1 = __importDefault(require("./scenes"));
const mongoose_1 = __importDefault(require("mongoose"));
const composers_1 = require("./composers");
const MONGO_USER = process.env.MONGO_USER;
const MONGO_PASSWORD = process.env.MONGO_PASSWORD;
const MONGO_DB = process.env.MONGO_DB;
const uri = `mongodb+srv://${MONGO_USER}:${MONGO_PASSWORD}@cluster.5pkto.mongodb.net/${MONGO_DB}?retryWrites=true&w=majority`;
const { BOT_DOMAIN, BOT_TOKEN: token, PORT } = process.env;
if (token === undefined) {
    throw new Error("BOT_TOKEN must be provided!");
}
const bot = new telegraf_1.Telegraf(token);
const stage = new telegraf_1.Scenes.Stage([
    ...scenes_1.default,
]);
bot.use((0, telegraf_1.session)());
bot.use(stage.middleware());
bot.use(async (ctx, next) => {
    var _a;
    await user_schema_1.Users.updateOne({ _id: (_a = ctx.from) === null || _a === void 0 ? void 0 : _a.id }, { last_activity: moment_1.default.tz("Europe/Zaporozhye").format() }).maxTimeMS(500);
    next();
});
bot.use(composers_1.command);
bot.use(composers_1.actionsDef);
bot.use(composers_1.actionsAdd);
bot.on("message", async (ctx) => {
    try {
        ctx.deleteMessage(ctx.message.message_id).catch(() => { });
    }
    catch (error) { }
});
bot.on("callback_query", (ctx) => {
    var _a;
    try {
        ctx.session.oneMessageId = Number((_a = ctx.update.callback_query.message) === null || _a === void 0 ? void 0 : _a.message_id);
        ctx.scene.enter("welcomeScene");
    }
    catch (e) {
        ctx.answerCbQuery("Ой, щось пішло не так").catch(() => { });
    }
});
mongoose_1.default.connect(uri).then(() => {
    console.log("Mongo connected");
    bot
        .launch({
        webhook: {
            hookPath: "/" + bot.secretPathComponent(),
            domain: String(BOT_DOMAIN),
            port: Number(PORT),
        },
    })
        .then(() => console.log("Bot start"));
});
process.once("SIGINT", () => bot.stop("SIGINT"));
process.once("SIGTERM", () => bot.stop("SIGTERM"));
module.exports = { bot };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm90LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2JvdC9ib3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSx1Q0FBcUQ7QUFDckQsb0RBQTRCO0FBQzVCLDJCQUF5QjtBQUN6QixnQkFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNwQixvREFBNEI7QUFDNUIsZ0JBQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQztBQUNsQyxtREFBMEM7QUFDMUMsc0RBQThCO0FBQzlCLHdEQUFnQztBQUNoQywyQ0FBOEQ7QUFHOUQsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUM7QUFDMUMsTUFBTSxjQUFjLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUM7QUFDbEQsTUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUM7QUFFdEMsTUFBTSxHQUFHLEdBQUcsaUJBQWlCLFVBQVUsSUFBSSxjQUFjLDhCQUE4QixRQUFRLDhCQUE4QixDQUFDO0FBRTlILE1BQU0sRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDO0FBQzNELElBQUksS0FBSyxLQUFLLFNBQVMsRUFBRTtJQUN2QixNQUFNLElBQUksS0FBSyxDQUFDLDZCQUE2QixDQUFDLENBQUM7Q0FDaEQ7QUFFRCxNQUFNLEdBQUcsR0FBRyxJQUFJLG1CQUFRLENBQWdCLEtBQUssQ0FBQyxDQUFDO0FBSS9DLE1BQU0sS0FBSyxHQUFHLElBQUksaUJBQU0sQ0FBQyxLQUFLLENBQWdCO0lBQzVDLEdBQUcsZ0JBQU07Q0FZVixDQUFDLENBQUM7QUFFSCxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUEsa0JBQU8sR0FBRSxDQUFDLENBQUM7QUFDbkIsR0FBRyxDQUFDLEdBQUcs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